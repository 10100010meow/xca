.TH XCA 1
.SH NAME
xca \- X Certificate and key management
.br
A GUI for handling X509 certificates, RSA/DSA/EC keys, PKCS#10 Requests and CRLs in Software and on Smartcards.
.SH SYNOPSIS
.B xca
.RI [ -v ]
.RI [ -d ]
.RI [ -x ]
.br
.SH "DESCRIPTION"
This application is intended as CA, certificate- and Key store. It uses a single file to store the items.
Supported are Certificate signing requests (PKCS#10), Certificates (X509v3), RSA, DSA and EC keys and Certificate revokation lists.
The signing of requests, and the creation of selfsigned certificates
is supported. Both can use templates for simplicity.
The PKI structures can be imported and exported in several formats
like PKCS#12, PEM, DER, PKCS#8, PKCS#7.
.br
XCA enables users to manage smartcards via the PKCS#11 interface

.SH OPTIONS
A summary of options are included below.
There are some deprecated legacy options:
.RI [ -k ]
.RI [ -r ]
.RI [ -c ]
.RI [ -p ]
.RI [ -7 ]
.RI [ -l ]
.RI [ -t ]
.RI [ -P ]
.br
Before XCA 0.9.0, the type of the items had to be given. This was removed since. Just put all keys, certs, requests and the database unsorted on the commandline. For backwards compatibility those options are ignored when found.
.TP
.B \-v
Show version information and exit.
.TP
.B \-d
expect the following argument to be a new database to use.
.TP
.B \-x
Exit after processing all commandline options.
Usually after importing the items from commandline
the application will startup as usual. With the
.I -x
option given it will exit after finishing the import dialog. This is useful if xca is used as default application for viewing certificates, keys or requests.

.SH SEE ALSO
A more detailed HTML documentation can be found in the doc directory, in the "Help" menu of the application or on http://xca.sf.net

.SH AUTHOR
This manual page was written by Christian Hohnstaedt <christian@hohnstaedt.de>
